std = {
    max_code_line_length = 100,
    max_comment_line_length = 150,
    max_line_length = 100,
    max_string_line_length = 100,

    globals = {
        "_G",
        "Class",
        "package",
        "table",
    },

    -- std.read_globals should include only the "native" Lua-related stuff
    read_globals = {
        "arg",
        "assert",
        "debug",
        "env",
        "getmetatable",
        "ipairs",
        "json",
        "math",
        "next",
        "os",
        "pairs",
        "print",
        "rawget",
        "rawset",
        "require",
        "setmetatable",
        "string",
        "tonumber",
        "tostring",
        "type",
        "unpack",
    },
}

files["**/*.lua"] = {
    max_comment_line_length = 250,

    -- globals
    globals = {
        "AssertChainNil",
        "AssertHasFunction",
        "AssertHasNoFunction",
        "AssertModuleGetter",
        "AssertModuleSetter",
        "AssertReturnSelf",
        "ClassRegistry",
        "Empty",
        "KnownModIndex",
        "ReturnValueFn",
        "ReturnValuesFn",
        "SendRPCToServer",
        "shallowcopy",
        "TableCount",
        "TableHasValue",
        "ToVector3",
        "Vector3",
    },
    read_globals = {
        "AllPlayers",
        "BRANCH",
        "CONTROL_MOVE_DOWN",
        "CONTROL_MOVE_LEFT",
        "CONTROL_MOVE_RIGHT",
        "CONTROL_MOVE_UP",
        "ENCODE_SAVES",
        "EQUIPSLOTS",
        "GetModConfigData",
        "GROUND",
        "InGamePlay",
        "KillThreadsWithID",
        "MODS_ROOT",
        "PREFAB_SKINS_IDS",
        "RPC",
        "SavePersistentString",
        "scheduler",
        "SetDebugEntity",
        "softresolvefilepath",
        "StartThread",
        "STRINGS",
        "TheFrontEnd",
        "TheInput",
        "TheNet",
        "ThePlayer",
        "TheSim",
        "TheWorld",
        "TrackedAssert",
        "TrimString",
        "USER_HISTORY_EXPIRY_TIME",
    },
}
